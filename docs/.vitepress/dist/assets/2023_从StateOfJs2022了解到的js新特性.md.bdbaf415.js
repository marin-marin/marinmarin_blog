import{_ as s,o as a,c as n,a as l}from"./app.95bb5be5.js";const A=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"语言特性","slug":"语言特性","link":"#语言特性","children":[{"level":3,"title":"Nullish Coalescing 空值合并运算符 (??)","slug":"nullish-coalescing-空值合并运算符","link":"#nullish-coalescing-空值合并运算符","children":[]},{"level":3,"title":"Privted Fields 类私有域","slug":"privted-fields-类私有域","link":"#privted-fields-类私有域","children":[]},{"level":3,"title":"Logical AND assignment 逻辑与归并(&&=)","slug":"logical-and-assignment-逻辑与归并","link":"#logical-and-assignment-逻辑与归并","children":[]},{"level":3,"title":"Promise.any()","slug":"promise-any","link":"#promise-any","children":[]}]}],"relativePath":"2023/从StateOfJs2022了解到的js新特性.md"}'),p={name:"2023/从StateOfJs2022了解到的js新特性.md"},o=l(`<p>一年一度的 <a href="https://2022.stateofjs.com/zh-Hans/" target="_blank" rel="noreferrer">StateOfJs</a> 调研报告又出来辣, 除了一如既往的<code>从业者调查\`\`特性/框架统计\`\`T-Shirt</code>等, 也有一大批2022年更加活跃起来的js新特性数据公布, 其中不少已经在现代浏览器中有了广泛的支持, 现在来康康统计这些新特性里有意思的内容吧.</p><h2 id="语言特性" tabindex="-1">语言特性 <a class="header-anchor" href="#语言特性" aria-hidden="true">#</a></h2><h3 id="nullish-coalescing-空值合并运算符" tabindex="-1">Nullish Coalescing <strong>空值合并运算符 (??)</strong> <a class="header-anchor" href="#nullish-coalescing-空值合并运算符" aria-hidden="true">#</a></h3><p><code>??</code>运算符解决了一个 <code>||</code>逻辑或运算符的痛点 -- javascript对于 <code>0</code>与 <code>null/undefined</code>的精准判断. 他相当于<code>0 NaN &#39;&#39;</code>则返回 <code>true</code></p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">??</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 0</span></span>
<span class="line"><span style="color:#89DDFF;">NaN</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">??</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// NaN</span></span>
<span class="line"><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">??</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// &#39;&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">??</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 1</span></span>
<span class="line"><span style="color:#89DDFF;">undefined</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">??</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 1</span></span>
<span class="line"></span></code></pre></div><blockquote><p>注意 <code>??</code> 不能与 <code>&amp;&amp; ||</code> 在同一优先级下使用 null || undefined ?? &#39;marin&#39; // SyntaxError (null || undefined) ?? &#39;marin&#39; // &#39;marin&#39;</p></blockquote><h3 id="privted-fields-类私有域" tabindex="-1">Privted Fields 类私有域 <a class="header-anchor" href="#privted-fields-类私有域" aria-hidden="true">#</a></h3><p>在<code>typescript</code>中有类似<code>Java</code>的<code>private</code>关键字, 但是在js中要实现私有域/私有变量需要一些<a href="https://www.yuque.com/chaojimalihao/px5pdq/lp16px" target="_blank" rel="noreferrer">其他的方法</a>. 新特性直接赋予了js更方便的类私有属性能力</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ClassWithPrivateField</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">#privateField</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">constructor</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">#privateField</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">42</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">delete</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">#privateField</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;">   </span><span style="color:#676E95;font-style:italic;">// 语法错误</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">#undeclaredField</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">444</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// 语法错误</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> instance </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ClassWithPrivateField</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">instance</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">#privateField </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">42</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">   </span><span style="color:#676E95;font-style:italic;">// 语法错误</span></span>
<span class="line"></span></code></pre></div><h3 id="logical-and-assignment-逻辑与归并" tabindex="-1">Logical AND assignment 逻辑与归并(&amp;&amp;=) <a class="header-anchor" href="#logical-and-assignment-逻辑与归并" aria-hidden="true">#</a></h3><p>一句话总结</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">x </span><span style="color:#89DDFF;">&amp;&amp;=</span><span style="color:#A6ACCD;"> y</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// equals</span></span>
<span class="line"><span style="color:#A6ACCD;">x </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> (x </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> y)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 注意和 &amp;= 的区别</span></span>
<span class="line"><span style="color:#A6ACCD;">x </span><span style="color:#89DDFF;">&amp;=</span><span style="color:#A6ACCD;"> y</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// equals</span></span>
<span class="line"><span style="color:#A6ACCD;">x </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> x </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;"> y</span></span>
<span class="line"></span></code></pre></div><h3 id="promise-any" tabindex="-1">Promise.any() <a class="header-anchor" href="#promise-any" aria-hidden="true">#</a></h3><p>类似数组操作的 some 的意思.<br>接收一个由Promise组成的可迭代对象, 返回一个新的promise<br><strong>与Promise.race()的区别</strong><br>**race **是返回无论结果是 resolve 还是 reject 的第一个promise<br>**any **是只返回第一个 resolve 的promise</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> promiseList </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">resolve</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">reject</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">setTimeout</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">reject</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">Error</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">timeout</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">))</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">200</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">resolve</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">reject</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  	</span><span style="color:#82AAFF;">setTimeout</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">resolve</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">123</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">500</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">reject</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Error</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">wuhu</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))</span></span>
<span class="line"><span style="color:#A6ACCD;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> pAny </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">any</span><span style="color:#A6ACCD;">(promiseList)</span></span>
<span class="line"><span style="color:#A6ACCD;">pAny</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#A6ACCD;">(</span><span style="color:#A6ACCD;font-style:italic;">res</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(res)) </span><span style="color:#676E95;font-style:italic;">// 500ms后显示123</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> pRace </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">race</span><span style="color:#A6ACCD;">(promiseList)</span></span>
<span class="line"><span style="color:#A6ACCD;">pRace</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#A6ACCD;">(</span><span style="color:#A6ACCD;font-style:italic;">res</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(res)) </span><span style="color:#676E95;font-style:italic;">// 立即输出 Error -&gt; wuhu</span></span>
<span class="line"></span></code></pre></div>`,15),e=[o];function t(c,r,y,i,F,D){return a(),n("div",null,e)}const d=s(p,[["render",t]]);export{A as __pageData,d as default};
