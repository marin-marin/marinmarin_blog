import{_ as e,o as a,c as d,a as o}from"./app.95bb5be5.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"Sass平台","slug":"sass平台","link":"#sass平台","children":[{"level":3,"title":"审核平台","slug":"审核平台","link":"#审核平台","children":[]},{"level":3,"title":"社区WEB/H5","slug":"社区web-h5","link":"#社区web-h5","children":[]},{"level":3,"title":"团队会员/企业会员平台","slug":"团队会员-企业会员平台","link":"#团队会员-企业会员平台","children":[]},{"level":3,"title":"企业微信第三方应用接入","slug":"企业微信第三方应用接入","link":"#企业微信第三方应用接入","children":[]},{"level":3,"title":"内容中台Sass","slug":"内容中台sass","link":"#内容中台sass","children":[]}]},{"level":2,"title":"编辑器","slug":"编辑器","link":"#编辑器","children":[{"level":3,"title":"架构方案","slug":"架构方案","link":"#架构方案","children":[]}]}],"relativePath":"2022/公司项目复盘.md"}'),r={name:"2022/公司项目复盘.md"},c=o('<p>来公司快2年了，一直处于业务的漩涡中挣扎。曾经希望接触到的编辑器内容，现在也如愿理解透彻了编辑器的架构原理和业务。总的来说，还是比较失望的。</p><h2 id="sass平台" tabindex="-1">Sass平台 <a class="header-anchor" href="#sass平台" aria-hidden="true">#</a></h2><p>初入公司时，并没有直接接触编辑器的代码和业务，而是作为中台开发人员为公司内容做审核、管理等内容的中台sass。</p><h3 id="审核平台" tabindex="-1">审核平台 <a class="header-anchor" href="#审核平台" aria-hidden="true">#</a></h3><p>平台选用了开源的<code>d2-admin</code> 作为基础框架，快速迭代出业务需求的系统。<br>整个开发流程没有什么说的，就是普通的后台管理系统，结合 <code>d2-admin</code> 框架中 vue - <code>mixin</code> 大量使用的特性，从一定程度上提高了代码的复用，但是维护成本也水涨船高。（新接手的同事找不到地儿，需要交接很多内容）</p><h3 id="社区web-h5" tabindex="-1">社区WEB/H5 <a class="header-anchor" href="#社区web-h5" aria-hidden="true">#</a></h3><p>后续业务渐渐向2C偏移，商业化内容增多，新的比较大的企划便是作品社区的建设。<br>对于作品、模板展示热度等，结合社区裂变，所以需要一块产品整合实现这块需求。<br><strong>项目开发流程：</strong></p><blockquote><ol><li>选用vue作为前端框架</li><li>web和h5使用不同路由呈现，redirect则根据设备ua or width 进行判定</li></ol></blockquote><br><p><strong>考虑不周的地方：</strong></p><blockquote><br> 1. **作为展示功能多于交互功能的项目，更应该采用的是服务器渲染的方式，虽然做过 webpack multi-page 处理，但是ssr明显会对于用户体验提升要更好。** </blockquote><h3 id="团队会员-企业会员平台" tabindex="-1">团队会员/企业会员平台 <a class="header-anchor" href="#团队会员-企业会员平台" aria-hidden="true">#</a></h3><p>后续团队转向 <code>小B</code> ，总体方向转为 <code>团队协作</code> ，为公司会员系统增加 团队 类型，其中需要做到 <code>分发</code>, <code>协作</code>, <code>审批</code>, <code>共同批注</code>等多人功能。<br><code>分发、协作、审批</code>这种流程性节点性的功能，前端按照<code>流程图</code>开发思路，简化用户操作路径，从配置绘制流程。<br><code>批注功能</code>则使用 <code>canvas</code>画布，以 层（layer） 的基本思想做多人批注功能。<br>整个开发节奏平稳，没有太大的幺蛾子。除了在<code>账号体系``团队体系</code>中有 <strong>用户中台</strong> 的技术债务，浪费了不少精力和时间。</p><h3 id="企业微信第三方应用接入" tabindex="-1">企业微信第三方应用接入 <a class="header-anchor" href="#企业微信第三方应用接入" aria-hidden="true">#</a></h3><h3 id="内容中台sass" tabindex="-1">内容中台Sass <a class="header-anchor" href="#内容中台sass" aria-hidden="true">#</a></h3><h2 id="编辑器" tabindex="-1">编辑器 <a class="header-anchor" href="#编辑器" aria-hidden="true">#</a></h2><h3 id="架构方案" tabindex="-1">架构方案 <a class="header-anchor" href="#架构方案" aria-hidden="true">#</a></h3><p>进入内容中台研发后，终于能接触到编辑器的全貌了。（虽然之前也开放了编辑器代码预览权限，但是没有深入参与过开发）<br>整体编辑器从 <code>核心(Core)``编辑器(Editor)``预览(View)</code>三个业务方向区分，关系为：<br><img src="https://cdn.nlark.com/yuque/0/2022/png/122315/1654070531529-b8609635-ccc0-40d1-a47f-396add1cc287.png#clientId=u693250ee-ee68-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=445&amp;id=u57ac8b36&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=445&amp;originWidth=667&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=26096&amp;status=done&amp;style=none&amp;taskId=u5c71ff0e-2d03-47bb-9111-46f9d55a5bb&amp;title=&amp;width=667" alt="image.png"></p><h4 id="核心-core" tabindex="-1">核心（Core） <a class="header-anchor" href="#核心-core" aria-hidden="true">#</a></h4><p>核心代码提供了大量基础类</p><ol><li>组件类（Component）</li><li>场景类（Scene，Layer）</li><li>页面类（Page，LongPage）</li><li>管理器类（XXManager）</li><li>其他工具类（动画、存储等）</li></ol><p>用以在<code>编辑器(Editor)``预览(View)</code>中做基础的预览渲染。<br>由于是提供基础能力，所以Core的内容使用原生js，在拓展和可维护上都比较方便。<br><img src="https://cdn.nlark.com/yuque/0/2022/png/122315/1654073185883-0e2507fd-8b3e-4b2f-a2fd-f4145b650f33.png#clientId=u693250ee-ee68-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=506&amp;id=uc67d7931&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=506&amp;originWidth=557&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=7721&amp;status=done&amp;style=none&amp;taskId=ud7cf0609-5f81-4be7-9cdc-70a9aedfe98&amp;title=&amp;width=557" alt="image.png"></p><h4 id="编辑器-editor" tabindex="-1">编辑器（Editor） <a class="header-anchor" href="#编辑器-editor" aria-hidden="true">#</a></h4><p>编辑器除了接收<code>核心</code> 提供的基本类用以呈现临时预览以外，还需要提供<code>增删改</code> 组件、管理类的能力。<br>由于编辑器整体是一个处于单个页面中重交互的应用，所以各编辑器应用（App）的编辑器（Editor）采用了不同的前端框架。</p><ol><li>Angular 1.5</li><li>Vue 2.6</li></ol><blockquote><p>说老实话，真的有点受够了这个Angular 1.5了。性能拉，开发维护难，社区生态差，一个坑追溯到盘古时期都找不到填坑的案例。</p></blockquote><pre><code>编辑器比较重要的是中心区域的 `临时预览+交互编辑` 区。\n</code></pre><h5 id="临时预览" tabindex="-1">临时预览 <a class="header-anchor" href="#临时预览" aria-hidden="true">#</a></h5><p>由<code>Core</code> 提供基础组件，预览逻辑与 <code>View</code> 相同，均是使用原生js，以<br><code>Scene</code> -&gt; <code>Page</code> -&gt; <code>*Layer</code> -&gt; <code>Components</code> <br>的步骤渲染出来的。</p><blockquote><p>具体预览逻辑将在 <code>View</code> 预览块说明</p></blockquote><h5 id="交互编辑" tabindex="-1">交互编辑 <a class="header-anchor" href="#交互编辑" aria-hidden="true">#</a></h5><p>交互编辑基于 <code>Dom</code> 操作，监听鼠标键盘事件，辅以 <code>订阅发布</code> 模式，实现全局配置同步并存入本地缓存，等待用户进行<code>保存/更新/发布</code>操作后提交后端进行保存。<br>全部组件的信息以及页面信息，均存储于一个<code>大型JSON</code>中，在后端数据库中以 <code>Long</code> 长字符串存储，故后端不参与整个作品制作内容，仅作为存储传输介质，但提供其他如短信服务、红包、SSO认证等业务、数据服务。<br>其中 <code>互动(H5游戏)编辑器</code> 不同于其他编辑器，限制用户自由发挥的空间，仅提供<strong>替换</strong>模板中元素图片和样式的功能，保证游戏性统一稳定。</p><h4 id="预览-view" tabindex="-1">预览（View） <a class="header-anchor" href="#预览-view" aria-hidden="true">#</a></h4><p>依据数据库中返回的BigJson, 在Core中生成对应的Eqx对象后由View直接调用其各个类的<code>render</code>方法.<br>主要是渲染顺序与层叠结构<br><code>组件(Comp)/组合(Group)</code> 为基本的最小单元<br><code>图层(Layer)</code>为承载最小单元的基础结构<br><code>页(Page)</code>对于不同编辑器来说Page的数量有不同规定(H5不限, 长页1, 互动由游戏类型和模板决定,表单的Page包括了答题Page和封面/结果页, 海报分单页海报和多页电子画册)<br><code>场景Scene</code>单例场景渲染的实例, 提供管理全部的pages, managers等</p>',34),i=[c];function t(n,s,l,p,h,m){return a(),d("div",null,i)}const u=e(r,[["render",t]]);export{g as __pageData,u as default};
